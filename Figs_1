conda deactivate
export PATH="$PATH:/home/naoto/miniconda3/bin"
export PATH="$PATH:/home/naoto/Toolbox/sratoolkit.3.0.0-ubuntu64/bin"

sudo apt update
sudo apt upgrade


R
Sys.setenv("http_proxy"="http://proxy.l2.med.tohoku.ac.jp:8080")
Sys.setenv("https_proxy"="http://proxy.l2.med.tohoku.ac.jp:8080")
update.packages()


setwd("/home/naoto/Data/scRNA/Figure/")
getwd()

library(Seurat)
library(tidyverse)
library(cowplot)
library(scales)
library(ggsankey)

# common valuables

pcols <- c(
"Neu"="pink1",
"Neuron"="pink1",
"mNeu"="orchid2",
"ExNeu"="pink3",
"InhNeu"="sienna1",
"GABA"="sienna1",
"SERT"="pink1",
"OMTN"="pink2",
"RN"="pink3",
"DANeu"="deeppink",
"NB"="cyan3",
"imNeu"="cyan3",
"RG"="steelblue3",
"RGa"="steelblue1",
"RGo"="steelblue3",
"Astro"="steelblue1",
"Oligo"="turquoise4",
"OPC"="turquoise3",
"Mgl"="orchid4",
"T"="khaki3",
"Prog"="olivedrab3",
"Peric"="sienna2",
"Endo"="thistle3",
"Unk"="ivory3"
)

my_levels <- c("imNeu","Neu","Neu1","Neu2","Neu3","Neu4","Neu5","GABA","DANeu","RG1","RG2","RG3","RG4","RGa","RGo","Prog","Peric","Endo","Unk")
my_levels <- factor(my_levels, levels=(my_levels))
#############################################################################################################
# Figure.1

MLO <- c("Mohamed","Patikas","Walter","Zagare")

data <- NULL
 data$Mohamed <- readRDS("/home/naoto/Data/scRNA/Mohamed/moh_v5_single_annotated2.rds")
 data$Patikas <- readRDS("/home/naoto/Data/scRNA/Patik/patik_cor&x3_V5_sep_single_annotated.rds")
 data$Walter <- readRDS("/home/naoto/Data/scRNA/Walter/walter_V5_d14_harmony_annotated.rds")
 data$Zagare <- readRDS("/home/naoto/Data/scRNA/Zagare/zagare_70d_v5_single_annotated.rds")
 data$Zagare$Dx <- factor(data$Zagare$Dx, levels= c("WT", "G2019S"))

label <- NULL
 label$Mohamed <- "MO-PARK4-1"
 label$Patikas <- "MO-PARK4-2"
 label$Walter <- "MO-PARK8-1"
 label$Zagare <- "MO-PARK8-2"

features <- NULL
 features$Mohamed <- c("TH","DDC","SLC6A3","SLC18A2")
 features$Patikas <- c("TH","DDC","SLC6A3","SLC18A2")
 features$Walter <- c("TH","DDC","SLC6A3","SLC18A2")
 features$Zagare <- c("TH","DDC","SLC18A2")

label1 <- NULL
 label1$Mohamed$upper <- c("A", NA) 
 label1$Mohamed$middle <- c("B", "C")
 label1$Mohamed$low <- c("D", NA)
 label1$Patikas$upper <-  c("E", NA) 
 label1$Patikas$middle <-  c("F", "G")
 label1$Patikas$low <- c("H", NA)
 label1$Walter$upper <-  c("I", NA) 
 label1$Walter$middle <-  c("J", "K")
 label1$Walter$low <- c("L", NA)
 label1$Zagare$upper <-  c("M", NA) 
 label1$Zagare$middle <-  c("N", "O")
 label1$Zagare$low <- c("P", NA)

ggg <- NULL

markers.to.plot <- c("SNAP25","MAPT","GAD1","PNOC","TH", "DDC","SLC6A3","SLC18A2", "DRD2", "ALDH1A1",
"SPATA22","AQP4","GSX1","OLIG1","TOP2A","MKI67","CDHR3","COL21A1","COL3A1")

for (i in MLO) {
    int <- data[[i]]
    prop_cluster <- prop.table(x=table(int@meta.data$Dx, int$orig.ID), margin =2)
    df <- data.frame(prop_cluster)
    df$Var2 <- factor(df$Var2, levels = unique(df$Var2)) %>% fct_rev

    Idents(int) <- factor(Idents(int), levels= my_levels) %>% fct_rev()
    gg1<- DotPlot(int, features = markers.to.plot, cols = c("midnightblue","deeppink3"), dot.scale = 6) +
      RotatedAxis()+
      theme(axis.title.x = element_blank(),
            axis.title.y = element_blank(), 
            axis.text.x = element_text(size=10), 
            legend.title = element_text(size=12),
            legend.text = element_text(size=8),
            legend.key.height = unit(0.2, 'cm'))

    Idents(int) <- factor(Idents(int), levels= my_levels)
    gg2a <- DimPlot(int, reduction = "umap", cols = pcols, label = FALSE, pt.size = 0.1, raster=FALSE) +
            theme(legend.key.size = unit(0.3, 'cm'))

    gg2b <- VlnPlot(int, features = features[[i]], pt.size = 0, stack = T, flip = T) +
     theme(legend.position = "none", 
           axis.title.x = element_blank(), 
           axis.title.y=element_text(size=11), 
           axis.text.x=element_text(size=10))

    df$Var2 <- factor(df$Var2, levels = unique(df$Var2)) %>% fct_rev
    gg3a <- ggplot(df, aes(x = Var2, y = Freq, fill = Var1)) +
            geom_bar(stat = "identity", position = "fill") +
            scale_y_continuous(labels = percent) +
            scale_fill_manual(values = c("deepskyblue2","deeppink1")) +
            labs(x=NULL, y="Ratio", title="The ratio of original ID \n in each cluster", fill=NULL) +           
            theme_bw() +
            theme(
              title=element_text(size =10),
              legend.text=element_text(size =12), 
              axis.text.x=element_text(size=10, angle = 45, hjust = 1), 
              axis.text.y=element_text(size=10), 
              axis.title=element_text(size=13),
              legend.key.size = unit(0.5, 'cm'),
              legend.key.width = unit(0.2, 'cm'),
              legend.box.spacing = unit(0, 'cm'))

    gg3b <- FeaturePlot(int, split.by = "Dx", features = c("TH"), cols =c("grey","deeppink3"), pt.size = 2)

    upper.panel <- plot_grid(NULL, gg1, align = "hv", rel_widths = c(.001, .09), ncol = 2,
      labels = label1[[i]]$upper, label_x = .0, label_y = 1.1, label_size = 14)
    middle.panel <- plot_grid(gg2b, gg3a, align = "h", rel_widths = c(.5, .5), ncol = 2,
      labels = label1[[i]]$middle, label_x = .0, label_y = 1.1, label_size = 14)
    lower.panel <- plot_grid(gg3b, NULL, align = "hv", rel_widths = c(.8, .2), ncol = 2,
      labels = label1[[i]]$low, label_x = .0, label_y = 1., label_size = 14)

    ggg[[i]] <- plot_grid(
       NULL, upper.panel, middle.panel, lower.panel, 
       ncol = 1,
       rel_heights = c(.02, .08, .08,.08),
       labels = c(label[[i]], NA, NA, NA),
       label_x = -.05, label_y = 1.0, label_size = 16)
}

dev.new(width=12, height=14)
plot_grid(
   ggg[[1]], ggg[[2]], ggg[[3]], ggg[[4]], 
   ncol = 2,
   rel_widths = c(.1, .1))
ggsave(file="figure1.png", bg = "white")
dev.off()
#############################################################################################################
# Figure.3

result <- readRDS("predicted_hMLO_LM_Kam.rds")

MLO <- c("Mohamed","Patikas","Walter","Zagare")
pred <- c("simple.LM", "orig.ID", "pred.Kam")
pred_levels <- c("Neu","Neuron","mNeu","ExNeu","InhNeu","SERT","OMTN","RN","GABA","DAN","DANeu","NB","imNeu","RG","RG1","RG2","RGa","RGo","Astro","Oligo","OPC","Mgl","T","Prog","Peric","Endo","Unk")
pred_levels <- factor(pred_levels, levels=(pred_levels))

label <- NULL
  label$Mohamed <- "MO-PARK4-1"
  label$Patikas <- "MO-PARK4-2"
  label$Walter <- "MO-PARK8-1"
  label$Zagare <- "MO-PARK8-2"

label2 <- NULL
  label2$Mohamed <- c("A", "B", "C", "D")
  label2$Patikas <- c("E", "F", "G", "H")
  label2$Walter <-  c("I", "J", "K", "L")
  label2$Zagare <- c("M", "N", "O", "P")

df <- NULL
ggs <- NULL

for (i in MLO) {
    query <- result[[i]]
    df1<- query$orig.ID %>% data.frame
    colnames(df1) <- "orig.ID"
    df1 <- rownames_to_column(df1, "cell.id")
    df2 <- query@meta.data$simple.LM %>% data.frame
    colnames(df2) <- "simple.LM"   
    df3 <- query@meta.data$pred.Kam %>% data.frame
    colnames(df3) <- "pred.Kam" 
    df <- data.frame(df1 ,df2, df3)
    df <- df %>% make_long(pred)
    df$node <- factor(df$node, levels= pred_levels)%>% fct_rev()

  gg1 <- ggplot(df, aes(x = x, 
                 next_x = next_x, 
                 node = node, 
                 next_node = next_node,
                 fill = factor(node),
                 label = node)) +
    geom_sankey(flow.alpha = 0.5, node.color = 1) +
    geom_sankey_label(size = 4, color = "black") +
    scale_fill_manual(values = pcols) +
    scale_x_discrete(labels =c("Fetal midbrain ID","Original ID","Aged midbrain ID")) +
    labs(title = NULL, x= NULL, y = label[[i]]) +
    theme_sankey(base_size = 20) +
    theme(legend.position = "none") 

  Idents(query) <- "simple.LM"
  query@active.ident <- factor(query@active.ident, levels= pred_levels)
  gg2 <- DimPlot(query, reduction = "umap", label = FALSE, cols= pcols, pt.size = 0.1)+
                 labs(x="UMAP-1", y="UMAP-2", title="Fetal midbrain ID", color=NULL) 
  Idents(query) <- "orig.ID"
  query@active.ident <- factor(query@active.ident, levels= pred_levels)
  gg3 <- DimPlot(query, reduction = "umap", label = FALSE, cols= pcols, pt.size = 0.1)+
         labs(x="UMAP-1", y="UMAP-2", title="Original ID", color=NULL) 
  Idents(query) <- "pred.Kam"
  
  query@active.ident <- factor(query@active.ident, levels= pred_levels)
  gg4 <- DimPlot(query, reduction = "umap", label = FALSE, cols= pcols, pt.size = 0.1)+
         labs(x="UMAP-1", y="UMAP-2", title="Aged midbrain ID", color=NULL) 
  ggs[[i]] <- plot_grid(gg1,gg2,gg3,gg4, align = "h", ncol=4, rel_widths = c(.25, .2, .2, .2),
  labels = label2[[i]], label_x = .05, label_y = 1.05, label_size = 18)
  }

dev.new(width=18, height=15)
 plot_grid(NULL, ggs[[1]],ggs[[2]],ggs[[3]],ggs[[4]], align = "v", ncol =1, rel_heights = c(0.1, 1, 1, 1, 1))
 
 ggsave(file="summary_predicted.png", bg = "white")
 dev.off()
#####################################################################################
# Fig. S6
# ratio of cell ID

label3 <- NULL
  label3$Mohamed <- c("A", "B", "C")
  label3$Patikas <- c("D", "E", "F")
  label3$Walter <-  c("G", "H", "I")
  label3$Zagare <- c(" J", "K", "L")

gg <- NULL
result$Zagare@meta.data$Dx <- factor(result$Zagare@meta.data$Dx, levels = c("WT", "G2019S"))

for (i in MLO) {
  for (j in pred) {
    prop_cluster <- prop.table(x=table(result[[i]]@meta.data$Dx, result[[i]]@meta.data[[j]]), margin =2)
    df3 <- data.frame(prop_cluster)
    df3$Var2 <- factor(df3$Var2, levels =  pred_levels)
    df3 <- na.omit(df3)

    gg[[j]] <- ggplot(df3, aes(x = Var1, y = Freq, fill = Var2)) +
                      geom_bar(stat = "identity", position = "fill") +
                      scale_y_continuous(labels = percent) +
                      scale_fill_manual(values = pcols) +
                      labs(x=NULL, y= label[[i]], title=NULL, fill=NULL) + 
                      theme_bw() +
                      theme(title=element_text(size =13, face = "bold"),
                            legend.key.height = unit(0.5, 'cm'),
                            legend.text=element_text(size =12),
                            axis.text.x=element_text(size=13, angle = 30, hjust = 1), 
                            axis.text.y=element_text(size=10), 
                            axis.title=element_text(size=12)) 
  }
  ggs[[i]] <- plot_grid(gg[[1]],gg[[2]],gg[[3]], align = "v", ncol =3, rel_widths = c(1, 1, 1),
                        labels = label3[[i]], label_x = -.02, label_y = 1.08, label_size = 18)
}
upper <- plot_grid(NA, NA, NA, align = "v", ncol =3, rel_widths = c(1, 1, 1),
                   labels = c("Fetal midbrain ID","   Original ID","Aged midbrain ID"),
                   label_x = -0.1, label_y = 1., label_size = 16)

dev.new(width=10, height=10)
   plot_grid(upper, 
             ggs[[1]],ggs[[2]],ggs[[3]], ggs[[4]], align = "v", ncol =1, rel_heights = c(.2, 1, 1, 1, 1))
 ggsave(file="predicted_ratio.png")
 dev.off()
#############################################################################################################
